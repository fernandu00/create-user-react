[{"/home/fernando/Documentos/Curso Javascript/Node/Projetos/api/api_front/src/index.js":"1","/home/fernando/Documentos/Curso Javascript/Node/Projetos/api/api_front/src/reportWebVitals.js":"2","/home/fernando/Documentos/Curso Javascript/Node/Projetos/api/api_front/src/App.js":"3","/home/fernando/Documentos/Curso Javascript/Node/Projetos/api/api_front/src/components/Create.js":"4","/home/fernando/Documentos/Curso Javascript/Node/Projetos/api/api_front/src/components/Edit.js":"5"},{"size":535,"mtime":1661165887246,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1661165887250,"results":"8","hashOfConfig":"7"},{"size":3534,"mtime":1661515461912,"results":"9","hashOfConfig":"7"},{"size":1010,"mtime":1661512558547,"results":"10","hashOfConfig":"7"},{"size":1069,"mtime":1661512782376,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"tue1vb",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/fernando/Documentos/Curso Javascript/Node/Projetos/api/api_front/src/index.js",[],[],[],"/home/fernando/Documentos/Curso Javascript/Node/Projetos/api/api_front/src/reportWebVitals.js",[],[],"/home/fernando/Documentos/Curso Javascript/Node/Projetos/api/api_front/src/App.js",["29","30"],[],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { FaTrash } from \"react-icons/fa\";\nimport { AiFillEdit } from \"react-icons/ai\";\nimport Create from \"./components/Create\";\nimport Edit from \"./components/Edit\";\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n\n  const [name, setName] = useState(\"\");\n  const [job, setJob] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [isEditing, setIsEditing] = useState(false);\n  const [editID, setEditID] = useState(null);\n\n  const getUsers = async () => {\n    const response = await axios.get(\"http://localhost:3001/getusers\");\n    setUsers(response.data);\n  };\n\n  const createNewUser = async (e) => {\n    e.preventDefault();\n    await axios.post(\"http://localhost:3001/createuser\", {\n      name,\n      job,\n      username,\n    });\n\n    // const { newName, newJob, newUsername } = response.data;\n    alert(`user ${name} created \\n  job: ${job} \\n username:${username}`);\n    setName(\"\");\n    setJob(\"\");\n    setUsername(\"\");\n    getUsers();\n  };\n\n  const deleteUser = async (_id) => {\n    const response = await axios.delete(`http://localhost:3001/users/${_id}`);\n    console.log(response.data);\n    getUsers();\n  };\n\n  const editUser = async (_id) => {\n    const editingUser = await users.find((item) => item._id === _id);\n    const { name, job, username } = editingUser;\n\n    setIsEditing(true);\n    setName(name);\n    setJob(job);\n    setUsername(username);\n    setEditID(_id);\n  };\n\n  const handleUpdate = async (editID) => {\n    const response = await axios.patch(\n      `http://localhost:3001/users/${editID}`,\n      {\n        name,\n        job,\n        username,\n      }\n    );\n    setName(\"\");\n    setJob(\"\");\n    setUsername(\"\");\n    setIsEditing(false);\n    getUsers();\n  };\n\n  return (\n    <div className=\"App\">\n      {isEditing ? (\n        <Edit\n          name={name}\n          setName={setName}\n          job={job}\n          setJob={setJob}\n          username={username}\n          setUsername={setUsername}\n          createNewUser={createNewUser}\n          editID={editID}\n          setEditID={setEditID}\n          setIsEditing={setIsEditing}\n          editUser={editUser}\n          handleUpdate={handleUpdate}\n        />\n      ) : (\n        <Create\n          name={name}\n          setName={setName}\n          job={job}\n          setJob={setJob}\n          username={username}\n          setUsername={setUsername}\n          createNewUser={createNewUser}\n        />\n      )}\n      <article>\n        <button className=\"submit-btn\" onClick={getUsers}>\n          List users\n        </button>\n      </article>\n      {users.length > 0 && <h1>Users</h1>}\n      <section className=\"user-container\">\n        {users.map((user) => {\n          const { _id, name, job, username } = user;\n          return (\n            <article className=\"users\" key={_id}>\n              <h2 className=\"name\">Name: {name} </h2>\n              <h3 className=\"job\">Job: {job}</h3>\n              <p className=\"username\">Username: {username}</p>\n              <div className=\"icon-container\">\n                <button className=\"icon\" onClick={() => editUser(_id)}>\n                  <AiFillEdit className=\"edit\" />\n                </button>\n                <button className=\"icon\" onClick={() => deleteUser(_id)}>\n                  <FaTrash className=\"delete\" />\n                </button>\n              </div>\n            </article>\n          );\n        })}\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","/home/fernando/Documentos/Curso Javascript/Node/Projetos/api/api_front/src/components/Create.js",[],[],"/home/fernando/Documentos/Curso Javascript/Node/Projetos/api/api_front/src/components/Edit.js",[],[],{"ruleId":"31","severity":1,"message":"32","line":1,"column":8,"nodeType":"33","messageId":"34","endLine":1,"endColumn":12},{"ruleId":"31","severity":1,"message":"35","line":58,"column":11,"nodeType":"33","messageId":"34","endLine":58,"endColumn":19},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'response' is assigned a value but never used."]